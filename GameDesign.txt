■ アイテム
アイテムは3個で固定
アイテムは食われると死ぬ。死ぬと決められた時間後に復活する。
復活するまでの時間は、死んだ回数に比例する。死ねば死ぬほど復活が遅くなる。

■ マップ
右端と左端、上端と下端はつながってループする。
いきなり境界をまたがって登場すると衝突事故が発生するので、端の一列は上下、左右、両方に表示するミラー行とする。

■ 操作
How To Playに書いていないもの
PageUpでコリジョンマップ表示 - 衝突ロジックのデバッグ確認用
Shiftキー2回でポーズ中にロゴのオーバーレイ表示 - メディア掲載画面キャプチャ用

■ コーディングの反省点
オブジェクト基底クラスがない。
アイテムとスネークの共通部分を基底クラスにする。

オブジェクト（スネーク）とシーン（ゲームのメインループ）のどちらにロジックを持たせるのか、方針がぶれている。
オブジェクト指向脳でいえば美しいのはすべてオブジェクト側で自己判断することだが、シーン側で処理する方がコーディングは簡単になる。余計なやり取りが減るから。
もっと多彩・属性が多い・変化するオブジェクトを扱うならすべてオブジェクト側で処理しないと、メインループが肥大化しすぎるか。

コリジョンマップは、ステージが拡大するたびに、コリジョンマップ自体も毎回拡大している。
拡大するとオブジェクトの再配置が発生するし、拡大アニメーション中の処理の妥当性も含めて、そのあたりが客観的に非常に分かりにくいしバグの巣窟にもなる。
最初から巨大なマップを持ち、その利用範囲だけを徐々に拡大する方がシンプルな実装だと思うが、限界値がないので巨大なマップでもいつかは拡大処理が必要になる。
